#!/usr/bin/make -f
#
# This file is part of xsysguard <http://xsysguard.sf.net>
# Copyright (C) 2005-2008 Sascha Wessel <sawe@users.sf.net>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

################################################################################

# To build statically linked xsysguardd executables, you need to have a uClibc
# toolchain for each architecture. You can build your uClibc toolchains using
# the uClibc buildroot system: http://www.uclibc.org/FAQ.html#compiling
#
# Recommended versions:
#   GCC 4.2 or newer (for -combine and -fwhole-program flags)
#   Kernel 2.6.23 or newer (for full inotify support on cris)
#
#
# To compress your executables, you need upx - the Ultimate Packer for
# eXecutables: http://upx.sourceforge.net

################################################################################

VERSION := $(shell cat ../VERSION)
ifndef VERSION
$(error cannot read VERSION file)
endif
SVNVERSION := $(shell test -d ../.svn && svnversion -nc .. | sed -e 's/^[^:]*://;s/[A-Za-z]//')
ifdef SVNVERSION
VERSION := $(VERSION).svn$(SVNVERSION)
endif

################################################################################

DEF := -D_GNU_SOURCE
DEF += -D XSG_LOG_LEVEL=2
DEF += -D XSG_LOG_DOMAIN=NULL
DEF += -D XSYSGUARD_VERSION=\"$(VERSION)\"
DEF += -D XSG_API=

CFLAGS := -static -g0 -Iinclude -Wall -DLinux $(DEF)
CFLAGS += -Os -combine -fwhole-program -fomit-frame-pointer

SRC := xsysguardd.c
SRC += include/xsysguard.h types.h
SRC += main.c main.h 
SRC += conf.c conf.h
SRC += rpn.c rpn.h
SRC += scanf.c scanf.h
SRC += compat.c utils.c string.c list.c hash.c buffer.c
SRC += modules_static.c modules.h
SRC += vard.c vard.h
SRC += writebuffer.c writebuffer.h

################################################################################

UPX   := upx --lzma
GCC   := linux-uclibc-gcc $(CFLAGS)
STRIP := linux-uclibc-strip -R .comment -R .note

################################################################################

ARCH := i386
ARCH += ia64
ARCH += x86_64
ARCH += arm
ARCH += armeb
ARCH += mips
ARCH += mipsel
ARCH += powerpc
ARCH += sparc
ARCH += avr32
ARCH += cris
ARCH += sh3
ARCH += sh4
ARCH += m68k

################################################################################

ALL := $(patsubst %,xsysguardd-static-linux-%,$(ARCH))
ALL += $(patsubst %,xsysguardd-$(VERSION)-static-linux-%.tar.gz,$(ARCH))

################################################################################

all: $(ALL)

xsysguardd-static-linux-%: $(SRC)
	$(patsubst xsysguardd-static-linux-%,%,$@)-$(GCC) -o $@ $(filter %.c,$^) -lm
	$(patsubst xsysguardd-static-linux-%,%,$@)-$(STRIP) $@
	$(RM) $@-upx
	$(UPX) -o $@-upx $@ || true

xsysguardd-$(VERSION)-static-linux-%.tar.gz: xsysguardd-static-linux-%
	mkdir $(patsubst %.tar.gz,%,$@)
	cp $^ README.static ../COPYING $(patsubst %.tar.gz,%,$@)
	if test -x $^-upx; then cp $^-upx README.upx $(patsubst %.tar.gz,%,$@); else true; fi
	tar -czf $@ $(patsubst %.tar.gz,%,$@)
	$(RM) -r $(patsubst %.tar.gz,%,$@)

clean:
	$(RM) xsysguardd-static-linux-*
	$(RM) xsysguardd-*.tar.gz

.PHONY: all clean

